name: Build APK

on:
  push:
    branches:
      - main  # Exécute le processus lors des commits dans la branche 'main'

jobs:
  build:
    runs-on: ubuntu-20.04  # Essaie ubuntu-22.04 si nécessaire

    steps:
      # Étape 1: Checkout du repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Étape 2: Installation de Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8  # Version de Python à utiliser

      # Étape 3: Installation des dépendances système
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            libncurses6 \
            libncurses-dev \
            libreadline-dev \
            libffi-dev \
            libssl-dev \
            autoconf \
            libtool \
            pkg-config \
            zip \
            unzip \
            python3-pip \
            cmake \
            libsqlite3-dev \
            sqlite3 \
            bzip2 \
            libbz2-dev
        shell: bash

      # Étape 4: Installation des packages .deb locaux
      - name: Install local .deb packages
        run: |
          sudo dpkg -i lib64tinfo6_6.5+20250216-2_amd64.deb || sudo apt-get install -f -y
        shell: bash

      # Étape 5: Installation et mise à jour de Buildozer et python-for-android
      - name: Install Buildozer and dependencies
        run: |
          python3 -m pip install --upgrade Cython==0.29.33 buildozer python-for-android
        shell: bash

      # Étape 6: Modification de buildozer.spec pour forcer Gradle 4.2.2
      - name: Force Gradle 4.2.2 in buildozer.spec
        run: |
          if grep -q "android.gradle_version" buildozer.spec; then
            sed -i 's/^android.gradle_version = .*/android.gradle_version = 4.2.2/' buildozer.spec
          else
            echo "android.gradle_version = 4.2.2" >> buildozer.spec
          fi
        shell: bash

      # Étape 7: Activation des logs détaillés dans buildozer.spec
      - name: Enable detailed logging in buildozer.spec
        run: |
          if grep -q "log_level" buildozer.spec; then
            sed -i 's/^log_level = .*/log_level = 2/' buildozer.spec
          else
            echo "log_level = 2" >> buildozer.spec
          fi
        shell: bash

      # Étape 8: Compilation de l'APK avec logs détaillés
      - name: Build APK with Buildozer (detailed logs)
        run: |
          buildozer -v android debug | tee buildozer_log.txt
        shell: bash

      # Étape 9: Téléversement du log en cas d'échec
      - name: Upload Buildozer log on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: buildozer_log
          path: buildozer_log.txt

      # Étape 10: Téléversement de l'APK généré en tant qu'artefact
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: package  # Nom de l'artefact
          path: ./bin/*.apk  # Chemin vers l'APK généré
